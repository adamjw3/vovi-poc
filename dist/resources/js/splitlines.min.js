"use strict";function _toConsumableArray(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}var FESplitLines={Init:function(){this.Scroll(),this.AddLines(),this.Intersection(),this.FadeIn()},Scroll:function(){new LocomotiveScroll({el:document.querySelector("[data-scroll-container]"),smooth:!0})},AddLines:function(){$(".js-line-splitting").each(function(){$(this).splitLines({tag:'<div class="line-outter"><div class="line-inner">',keepHtml:!0})})},FadeIn:function(){$("body").css({opacity:1})},Intersection:function(){var n=[].concat(_toConsumableArray(document.querySelectorAll(".line-outter"))),t=new IntersectionObserver(function(n){console.log(n),n.forEach(function(n){n.isIntersecting&&n.target.children[0].classList.add("is-animate")})},{rootMargin:"-10%",threshold:0});n.forEach(function(n){t.observe(n)})}};